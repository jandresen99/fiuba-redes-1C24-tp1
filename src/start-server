from socket import *
from threading import Thread
import logging
from lib.utils import get_server_args
from lib.rdt_pkg import RDTPackage

logger = logging.getLogger(__name__)
# Donde mantengo las conexiones para diferenciar entre cliente nuevo y viejo
clients = set()

# Para ver manejo de clientes concurrentemente usando UDP:
# https://stackoverflow.com/questions/45904197/multiple-udp-sockets-and-multiple-clients
def handle_client(sock, addr):    
    # pkg, addr = sock.recvfrom(1024)
    # pkg: RDTPackage = RDTPackage.extract(pkg)
    # logger.info("Message received from %s: %s", addr, pkg)
    # sock.sendto("ACK".encode(), addr)
    return

def start(ip, port):
    server_sock = socket(AF_INET, SOCK_DGRAM)
    server_sock.bind((ip, port))
    logger.info("Listening on %s:%d", ip, port)

    # Este thread es el que se encarga de escuchar mensajes recibidos constantemente.
    # Es el único punto de entrada de mensajes del server
    # Parece que no tiene mucho sentido crear un socket UDP por cliente, buscarle
    # un puerto a cada socket y handlear errores para eso. Suena bardo.
    # Luego cada thread por cliente procesa el mensaje recibido
    while True:
        pkg, addr = server_sock.recvfrom(1024)
        # TODO: acá habría que hacer el 3-way handshake?
        if addr not in clients:
            logger.info(f"New client: %s", addr)
            # Le aviso al cliente que escuche su conexión
            print(f"[NEW] Enviando ACK a ", addr)
            server_sock.sendto("ACK".encode(), addr)
            clients.add(addr)
        else:
            logger.info(f"[OLD] Client: %s", addr)
            print(f"[OLD] Enviando ACK a ", addr)
            server_sock.sendto("ACK".encode(), addr)             
            client_thread = Thread(target=handle_client, args=(server_sock, addr))   
            client_thread.start()

def main():
    args = get_server_args()

    if args.verbose:
        level = logging.DEBUG
    elif args.quiet:
        level = logging.WARNING
    else:
        level = logging.INFO

    logging.basicConfig(filename='server.log', level=level)
    ch = logging.StreamHandler()
    ch.setLevel(level)
    logger.addHandler(ch)

    start(args.host, args.port)



if __name__ == "__main__":
    main()
